name: Build and Push Docker Image to DockerHub

on:
  push:
    branches: [ main, master ]
    paths:
      - 'app/**'
      - 'scripts/**'
      - 'docker/**'
      - 'requirements.txt'
      - 'Dockerfile.*'
      - '.github/workflows/docker-build-push.yml'
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:
    inputs:
      tag:
        description: 'Docker tag to build'
        required: false
        default: 'latest'

env:
  REGISTRY: docker.io
  IMAGE_NAME: ubiquitous-octo-invention

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to DockerHub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/puneetrinity/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=raw,value=latest,enable={{is_default_branch}}
          type=raw,value=${{ github.event.inputs.tag }},enable=${{ github.event_name == 'workflow_dispatch' }}
          
    - name: Build and push production image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile.production
        platforms: linux/amd64
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        no-cache: true
        
    - name: Build and push GPU-optimized image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile.production
        platforms: linux/amd64
        push: ${{ github.event_name != 'pull_request' }}
        tags: |
          ${{ env.REGISTRY }}/puneetrinity/${{ env.IMAGE_NAME }}:gpu
          ${{ env.REGISTRY }}/puneetrinity/${{ env.IMAGE_NAME }}:runpod
        labels: ${{ steps.meta.outputs.labels }}
        no-cache: true
        
    - name: Test image
      if: github.event_name != 'pull_request'
      run: |
        echo "ðŸ§ª Testing built image..."
        docker run --rm --entrypoint="" ${{ env.REGISTRY }}/puneetrinity/${{ env.IMAGE_NAME }}:latest python --version
        docker run --rm --entrypoint="" ${{ env.REGISTRY }}/puneetrinity/${{ env.IMAGE_NAME }}:latest ls -la /workspace/app
        docker run --rm --entrypoint="" ${{ env.REGISTRY }}/puneetrinity/${{ env.IMAGE_NAME }}:latest ls -la /app/start-app.sh
        echo "âœ… Image test completed"
        
    - name: Generate deployment info
      if: github.event_name != 'pull_request'
      run: |
        echo "ðŸŽ¯ Deployment Information" >> $GITHUB_STEP_SUMMARY
        echo "========================" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**DockerHub Images Built:**" >> $GITHUB_STEP_SUMMARY
        echo "- \`${{ env.REGISTRY }}/puneetrinity/${{ env.IMAGE_NAME }}:latest\` (App-only, fast deploy)" >> $GITHUB_STEP_SUMMARY
        echo "- \`${{ env.REGISTRY }}/puneetrinity/${{ env.IMAGE_NAME }}:gpu\` (GPU-optimized)" >> $GITHUB_STEP_SUMMARY
        echo "- \`${{ env.REGISTRY }}/puneetrinity/${{ env.IMAGE_NAME }}:runpod\` (RunPod ready)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**RunPod Deployment Commands:**" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
        echo "# Quick deployment (recommended)" >> $GITHUB_STEP_SUMMARY
        echo "docker run -d --gpus all -p 8000:8000 --name ai-search \\" >> $GITHUB_STEP_SUMMARY
        echo "  ${{ env.REGISTRY }}/puneetrinity/${{ env.IMAGE_NAME }}:latest" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "# GPU-optimized deployment" >> $GITHUB_STEP_SUMMARY
        echo "docker run -d --gpus all -p 8000:8000 --name ai-search \\" >> $GITHUB_STEP_SUMMARY
        echo "  ${{ env.REGISTRY }}/puneetrinity/${{ env.IMAGE_NAME }}:runpod" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Access Points:**" >> $GITHUB_STEP_SUMMARY
        echo "- API: http://localhost:8000" >> $GITHUB_STEP_SUMMARY
        echo "- Health: http://localhost:8000/health/live" >> $GITHUB_STEP_SUMMARY
        echo "- Docs: http://localhost:8000/docs" >> $GITHUB_STEP_SUMMARY
