version: '3.8'

services:
  unified-ai-system:
    build:
      context: .
      dockerfile: Dockerfile.unified
    ports:
      - "8000:8000"   # ubiquitous-octo-invention
      - "8001:8001"   # ideal-octo-goggles
    environment:
      - PYTHONPATH=/app/ubiquitous-octo-invention:/app/ideal-octo-goggles
      - PORT=8000
      - SEARCH_PORT=8001
      - ENVIRONMENT=development
      - DEBUG=true
    volumes:
      # Mount source code for development
      - ./:/app/ubiquitous-octo-invention
      - ../ideal-octo-goggles:/app/ideal-octo-goggles
      # Mount logs
      - ./logs:/var/log/unified-ai-system
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health", "&&", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    networks:
      - ai-network

  # Optional: Redis for caching (if needed)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 3
    restart: unless-stopped
    networks:
      - ai-network

  # Optional: Nginx reverse proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - unified-ai-system
    restart: unless-stopped
    networks:
      - ai-network

volumes:
  redis_data:
    driver: local

networks:
  ai-network:
    driver: bridge
